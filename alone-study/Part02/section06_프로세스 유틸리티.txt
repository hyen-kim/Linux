Section 06. 프로세스 유틸리티

< 프로세스 관련 명령어 >
ps 
- 현재 실행중인 프로세스의 상태를 보여주는 명령어
- CPU 사용도가 낮은 순서로 출력

pstree 
- 실행 중인 프로세스들을 트리구조로 나타냄

jobs
- 작업이 중지된 상태, 백그라운드로 진행 중인 상태, 변경되었지만 보고되지 않은 상태 등을 표시
- 백그라운드로 실행중인 프로세스를 확인 , [숫자] 는 작업번호
- 출력된 목록에서 +는 현재 작업 실행, -는 앞으로 실행될 작업을 나타냄

bg와 fg
- 포어그라운드에서 백그라운드로 전환 : bg %작업번호 또는 bg 작업번호
- 백그라운드에서 포어그라운드로 전환 : fg %작업번호 또는 fg 작업번호

kill
- 프로세스를 종료

killall
- 같은 데몬의 여러 프로세서를 한 번에 종료시킬 때 사용
- 프로세스명으로 연관된 프로세스들을 종료시킨다.

nice
- 프로세스 사이의 우선순위를 확인, 우선순위를 변경할 수 있는 명령어
- 조정할 수 있는 NI 갑스이 범위는 -20 ~ 19 ( 우선순위 높음 -> 낮음 )
- 우선순위 0의 값을 가지면 값이 작을수록 우선순위가 높다.
- 옵션 -n을 사용하지 않으면 디폴트는 10을 사용
- 조정수치가 생략되면 명령의 우선권은 10만큼 증가한다.
- 명령어 nice -10 bash는 bash 프로세스 NI 값을 10 만큼 증가 => 우선순위를 낮춤
- 우선순위를 높이는 명령어는 nice --10 bash이다
  NI 값을 10만큼 감소시켜 우선순위를 높인다.
- nice [옵션] 프로세스명

renice
- 이미 실행중인 프로세스의 우선순위를 변경
- nice는 기존 NI값을 증감하지만 명령어 renice는 지정한 NI값을 설정
- nice는 양수값은 -를, 음수값은 --를 사용하지만, renice는 양수값에 -를 사용하지 않는다.
- renice [옵션] NI값 PID

top
- 리눅스 시스템의 운영 상태를 실시간으로 모니터링하거나 프로세스 상태를 확인할 수 있다.

nohup 
- 프로세스가 중단되지 않고 백그라운드로 작업을 수행
- 사용자가 로그아웃하거나 작업 중인 터미널 창이 닫혀도
  실행 중인 프로세스를 백그라운드 프로세스로 계속 작업할 수 있도록 한다.
- 용량이 큰 데이터 압축 해제와 같은 실행 시간이 오래 걸리는 프로세스들에 대해 
   nohup으로 처리하여 작업하면 작업 중단 없이 해당 업무를 완료할 수 있다.
- 백그라운드로 실행될 수 있도록 명령행 뒤에 &를 명시한다.

tail 
- 파일의 마지막 행을 기준으로 지정한 행까지 파일 내용의 일부를 출력
- 기본값으로 마지막 10줄을 출력

< 스케줄링과 cron >
- 주기적으로 반복되는 일은 자동적으로 실행될 수 있도록 설정
- 스케줄링 데몬은 crond이며 관련 파일은 /etc/crontab
- 파일 /etc/crontab은 7개의 필드로 구성
- 명령어 crontab은 사용자가 주기적인 작업을 등록할 수 있게 한다.
