
===========================================================================

9주차


===========================================================================

04. 디스크 추가 설지

* 여러 디스크를 하나처럼 사용하기
- 디스크의 용량이 부족할 때 여러 개의 디스크를 하나의 디스크처럼 사용

* LVM의 기본 개념
- LVM은 독립적으로 구성된 디스크 파티션을 하나로 연결하여 한 파티션처럼 
  사용할 수 있도록 해줌 

* LVM 관련 용어
- PV(physical volume, 물리 볼륨) : /dev/sdb1, /dev/sdb2 
				   같은 실제 하드디스크의 파티션을 의미
- VG(volume group, 볼륨 그룹) : 여러 개의 PV를 그룹으로 묶은 것을 뜻한다.
				예를 들어 /dev/sdb1, /dev/sdb2가 GRP1이라는
				그룹을 만들 때 GRP1을 VG라고 함
- LV(logical volume, 논리 볼륨) : VG를 다시 적절한 크기의 파티션으로 나눌 때 
				  각 파티션을 LV라고 함 
- PE(physical extent) : PV가 가진 일정한 블록을 의미 -> 크기 4096KB
- LE(logical extent) : LV가 가진 일정한 블록을 의미

PV	->	VG	->	LV	-> 파일 시스템 생성.마운트


* LVM 관련 명령어
구분 		기능			명령
PV		생성			pvcreate 파티션이름
		상태확인		pvscan

VG		생성			vgcreate VG명 파티션(PV)명1 파티션(PV)명2...
		활성화			vgchange -a y VG명
		비활성화		vgchange -a n VG명
		삭제 			vgremove VG명
		정보확인		vgdisplay -v VG명
		PV추가			vgextend VG명 PV명
		PV삭제			vgreduce VG명 PV명
		VG명변경		vgrename 기준 VG명 새VG명

LV		생성			lvcreate -l PE 수 VG명 -n LV명
		삭제			lvremove LV명
		상태확인		lvscan
		용량확대		lvextent -l +PE 수 LV명
		용량축소		lvextent -l -PE 수 LV명


* LVM 생성 과정
① 기존 파일 시스템의 종류 변경 : 83 -> 8e	fdisk
② PV 생성					pvcreate
③ VG 생성					vgcreate
④ VG 활성화					vgchange -a y
⑤ LV 생성					lvcreate
⑥ LV에 파일 시스템 생성			mkfs, mke2fs
⑦ LV 마운트					mount








05. 디스크 관리

* 파일 시스템별 디스크 사용량 확인하기 : df 
- 디스크의 남은 공간에 대한 정보를 출력
- df [옵션][파일 시스템]
- -a : 모든 파일 시스템을 대상으로 디스크 사용량을 확인
- -k : 디스크 사용량을 KB 단위로 출력
- -m : 디스크 사용량을 MB 단위로 출력
- -h : 디스크 사용량을 알기 쉬운 단위 (GB, MB, KB 등)로 출력
- -t 파일 시스템 종류 : 지정한 파일 시스템 종류에 해당하는 디스크의 사용량을 출력
- -T : 파일 시스템 종류도 출력


* 디렉터리나 사용자별 디스크 사용량 확인하기 : du 
- 디스크의 사용 공간에 대한 정보를 출력
- du [옵션][디렉터리]
- -s : 특정 디렉터리의 전체 사용량을 출력
- -h : 디스크 사용량을 알기 쉬운 단위 (GB, MB, KB 등)로 출력


* 파일 시스템 검사하고 복구하기
- 파일 시스템은 부적절한 시스템 종료나 전원의 불안정, 소프트웨어 오류,
  하드웨어 오작동 등 다양한 이유로 손상될 수 있음
- 손상된 파일 시스템의 용량을 확인할 뿐만 아니라 파일 시스템의 상태를 점검하고 문제가 있을 때 복구해야함


* fsck 명령으로 파일 시스템 검사하기
- inode 및 블록, 디렉터리, 파일 링크 등을 검사하고 필요시 복구 작업도 수행
- 리눅스의 파일 시스템을 점검
- fsck [옵션] [장치명]
- -f : 강제로 점검
- -b : 슈퍼블록 : 슈퍼블록으로 지정한 백업 슈퍼블록을 사용
- -y : 모든 질문에 yes로 대답하게 함
- -a : 파일 시스템 검사에서 문제를 발견했을 때 자동으로 복구
 

* e2fsck 명령으로 파일 시스템 검사하기
- 리눅스 확장 파일 시스템 (ext2, ext3, ext4)을 점검한다.
- e2fsck [옵션][장치명]
- -f : 강제로 점검
- -b 슈퍼블록 : 슈퍼블록으로 지정한 백업 슈퍼블록을 사용
- -y : 모든 질문에 yes로 대답하게 함
- -j ext3/ext4 : ext3나 ext4 파일 시스템을 검사할 때 지정


* 배드 블록 검사하기 : badblocks
- 장치의 배드 블록을 검색
- badblocks [옵션][장치명]
- -v : 검색 결과를 자세하게 출력
- -o 출력파일 : 검색한 배드 블록 목록을 지정한 출력 파일에 저장


* 백업 슈퍼블록을 이용해 파일 시스템 복구하기
- 파일 시스템의 기본 슈퍼블록에 문제가 있으면 해당 파일 시스템을 사용할 수 없음
- 이 경우 백업 슈퍼블록 중 하나를 사용하여 파일 시스템을 복구
- 백업 슈퍼블록의 위치 파악하기 : dumpe2fs [장치명]


* 백업 슈퍼블록을 이용해 파일 시스템 복구하기
- 파일 시스템 복구하기 : -b 옵션
- 파일 시스템의 기본 슈퍼블록을 dd 명령으로 삭제

dd : 지정한 블록 크기만큼 파일을 복사
	if = 파일 : 표준 입력 대신 지정한 파일에서 읽어옴
	of = 파일 : 표준 출력 대신 지정한 파일로 복사함
	bs = 바이트수 : 한 번에 읽어오고 기록할 바이트 수
	count = 블록 수 : 블록 수만큼만 복사


