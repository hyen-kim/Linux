===============================================================================

4주차 
 
===============================================================================

01. 리눅스의 문서 편집기

< 리눅스 편집기의 종류 >
- GUI 환경인 그놈에서 제공하는 gedit
- 유닉스에서부터 사용했던 행 편집기(라인편집기)와 화면 편집기

행 단위 편집기 : ed, ex, sed
화면 편집기 : vi, emacs
GUI 편집기 : gedit

* 행 단위 편집기
ed : 유닉스 초기의 행 편집기로 사용이 불편하여 거의 사용이 없음
ex : 행 편집기이지만 단독으로 사용하기보다는 vi와 연결하여
      vi를 더욱 강력하게 하는 다양한 기능을 제공
sed : 스트림 편집기로, 일반 편집기와 달리 지시된 명령에 따라 파일의 내용을
      일괄적으로 바꿔서 출력해줌

* 화면 단위 편집기 
vi : 리눅스에서 일반적으로 사용할 수 있는 화면 편집기
emacs(이멕스) : 제공하는 기능이 매우 다양하지만 사용법이 어렵고
                복잡하여 전문적인 애호가 위주로 사용 
                GNU Emacs는 무료로 배포되며, 별도로 설치해야 함

=> vi 만 알고 있으면 된다.



< 모드형과 비모드형 편집기 >

모드형 
- 입력 모드와 명령 모드가 구분
- 입력 모드는 텍스트를 입력할 수 있는 모드이고, 
  명령 모드는 텍스트를 수정하고, 삭제하고, 복사와 붙이기등을 편집을 하는 모드
- 같은 글자라도 입력 모드에서는 텍스트를 처리하여 입력되고, 
  명령 모드에서는 텍스트로 입력되는 것이 아니라 편집 명령으로 사용
- vi는 모드형 편집기

비모드형
- 입력 모드와 명령 모드가 구분되어 있지 않음
- 편집 기능은 Ctrl이나 Alt 같은 특수 키와 함께 사용
- 한글과 워드는 비모드형 편집기

				모드형		비모드형(메모장)
입력모드 			텍스트입력	텍스트입력
명령모드	복사		yy		ctrl+c
		붙이기		p		ctrl+v
		저장		:wq,ZZ		ctrl+s
모드전환			i,a,o,esc	해당사항없음





02. vi 사용법

vi의 동작 모드
			               i,l,a,A,o,O      
	vi시작 --------->  명령모드  ----------------> 입력모드
 				     <---------------
					    esc 




			--------------> 마지막 행 모드  --------------> 저장 
			    :,/,?		          :w,:wq,:wq!
							  :q,:q!




< vi 시작하고 종료하기 >

vi 시작
- 파일을 지정할 경우 : 해당 파일이 있으면 내용이 보이고, 없는 파일이면 빈 파일이 열린다.
  vi test.txt

- 파일을 지정하지 않을 경우 : 빈 파일이 열린다 ( 파일명은 저장할 때 지정 가능 )
  vi


< 파일 저장하고 종료하기 >

vi 종료
- "명령 모드"나 "마지막 행 모드"에서 저장하고 종료 가능

마지막 행 모드 	:q 		: ci에서 작업한 것이 없을 때 그냥 종료한다.
		:q!		: 작업한 내용을 저장하지 않고 종료한다.
		:w 파일명	: 작업한 내용을 저장만 한다.
		:wq, :wq!	: 작업한 내용을 저장하고 vi를 종료한다.
명령 모드	ZZ (shift+zz) 	: 작업한 내용을 저장하고 vi를 종료한다.



*) 입력 모드로 전환하기 
i : 커서 "앞"에 입력한다 (현재 커서 자리에 입력)
a : 커서 "뒤"에 입력한다 ( 현재 커서 다음 자리에 입력)
o : 커서가 위치한 행의 "다음 행"에 입력한다.
I(대문자i) : 커서가 위치한 행의 첫 칼럼으로 이동하여 입력한다.
A : 커서가 위치한 행의 마지막 칼럼으로 이동하여 입력한다.
O : 커서가 위치한 행의 이전 행에 입력한다.

*) 커서 이동하기 
위 k
아리 j
오 l
왼 h

- 초기의 유닉스 : vi 화살표 키로 커서를 이동할 수 없었음
- 리눅스 vi : 화살표 키로도 커서를 이동할 수 있음

< 화면 이동하기 >
- 파일 크기가 터미널의 화면 크기보다 클 경우 화면을 이동하기 위한 명령
ctrl + u : 반 화면 위로
ctrl + d : 반 화면 아래
ctrl + b : 한 화면 위
ctrl + f : 한 화면 아래


< 특정 행으로 바로 이동하기 >

50G -> 50번째 행으로 이동 		-> 명령모드
:30(Enter키) -> 30번째 행으로 이동 	-> 마지막행모드


< 내용 수정하기 >
r : 한 글자 수정하기 
cw, #s : 단어 수정하기		=> 공백문자나 특수문자로 구분 (Esc키 눌러야함)
cc : 행 단위 수정하기 		=> 현재 행 모두 삭제하고 입력 가능하게
C : 행 단위 수정하기 		=> 커서부터 행의 끝까지 수정 가능

< 내용 삭제하기 >
x, #x : 커서 위치의 글자를 삭제, #에는 삭제할 글자 수를 지정	: 공백 문자에 위치
dw, #dw : 커서 위치의 단어를 삭제				: 그다음 단어 커서 첫글자 위치
D(shift+d) : 커서 위치부터 행의 끝까지 삭제 
dd, #dd : 커서 위치의 행을 삭제

< 명령 취소하기 >
u : 명령 취소
U : 해당 행의 모든 명령 취소
:e! : 마지막으로 저장한 내용 이후의 것을 버리고 새로 작업

< 복사하기 또는 잘라서 붙이기 >
yy, #yy : 커서가 위치한 행을 복사
p : 커서가 위치한 행의 아래쪽에 붙임
P : 커서가 위치한 행의 위쪽에 붙임
dd, #dd : 커서가 위치한 행을 잘라둠, 삭제와 같은 기능


< 네임드 버퍼 사용하기 >

언네임드 버퍼
- 이름을 붙이지 않은 버퍼
- yy 명령 키로 복사하거나 dd 명령 키로 잘라낼 경우, 복사하거나 잘라낸 내용이 저장
- 언네임드 버퍼는 내용을 하나만 저장

네임드 버퍼
- 이름을 붙여서 사용할 수 있는 버퍼
- 네임드 버퍼를 사용하면 각각 다른 이름을 붙은 버퍼에 독립적으로 내용을 저장하고 사용
- 네임드 버퍼에 이름을 붙일 때는 '+문자 또는 '+숫자(숫자 버퍼)의 형태로 사용
- 네임드 버퍼에 커서가 위치한 행을 저장하려면 '버퍼 이름+yy'를 입력
  -> 'a버퍼에 복사한 내용을 저장하려면 'ayy를 입력
  -> 네임드 버퍼의 내용을 붙이려면 'ap와 같이 '버퍼 이름+p'를 입력


< 마지막 행 모드에서의 복사하기, 잘라내기, 붙이기 >
1,$또는% : 1행부터 마지막 행까지
1,.: 1행부터 커서가 있는 행까지
/,$ : 커서가 있는 행부터 마지막 행까지 지정
.-3 : 현재 행과 이전 세 행까지 네행을 지정
10, 20 : 10행부터 20행까지 지정


< 검색하기 >
- /나 ?를 입력
/문자열 : 문자열을 아래방향으로 검색
?문자열 : 문자열을 위방향으로 검색
n : 원래 찾던 방향으로 다음 문자열 검색
N : 역방향으로 다음 문자열 검색


< 바꾸기 >
- 기존의 문자열을 다른 문자열로 바꾸려면 먼저 :을 입력하여 마지막 행 모드로 전환
- 커서 위치의 문자열만 바꿀 수도 있고, 파일 전체나 특정 범위 내에서 해당하는 문자열을 모두 바꿀 수도 있음

:s/문자열1/문자열2		: 문자열1을 문자열2로 바꾼다.
:%s/문자열1/문자열2/g		: 파일전체
:<범위>s/문자열1/문자열2	: 첫번째 나오는 문자열1을 바꿈
:<범위>s/문자열1/문자열2/g	: 범위내에서 
:<범위>s/문자열1/문자열2gc	: 수정할지 여부를 묻는다.


< 파일 읽어오기, 여러 파일 편집하기 >

:r파일	: 파일 읽어들여 현재 커서 위치에 삽입
:e파일	: 지정한 파일로 전환
:n	: vi 시작 시 여러 파일을 지정했을 경우 다음 파일로 작업을 이동



< 파일 편집을 마치고 다른 파일 편집하기 >
- :e 명령 키는 현재 작업 중인 파일의 작업을 마치고 다른 파일을 편집하려고 할 때 사용
- 예) test.txt 파일 편집을 완료하고 exec.txt 파일 편집으로 바꾸려면 :e exec.txt사용
- 이때 작업 중이던 파일을 먼저 저장하고 :e 명령을 실행해야 함
- 파일을 저장하지 않고 :e exec.txt를 실행하면 다음과 같은 오류 메시지가 출력

< 여러 파일 편집하기 >
- vi를 시작할 때 파일명을 여러 개 지정
- 파일 작업을 마치고 다음 파일로 이동하려면 :n을 입력

< vi에서 셸 명령 사용하기 >
:! 셸명령 	: vi 작업을 잠시 중단하고 셸 명령을 실행(vi로 돌아오려면 enter)
:sh 		: vi를 잠시 빠져나가서 셸 명령을 실행 (vi로 돌아오려면 exit)
		-> 한 번에 하나의 셸 명령만 실행
		-> 실행할 셸 명령이 여러 개라면 :sh 명령 키로 vi를 잠시 빠져나가서
      		   셸 작업을 수행하고 다시 돌아오는 것이 편리


< 기타 명령 키 >
ctrl + l : 현재 화면을 다시 출력
ctrl + g : 마지막 행에 출력
shift + j : 현재 행과 아랫행을 연결하여 한 행으로 만듬
. : 바로 직전에 했던 명령을 반복



